import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author BOSS
 */
public class placeOrder extends javax.swing.JFrame {

    SpinnerNumberModel value = new SpinnerNumberModel(1,1,9,1);
    
    String uniformTypeArray[] = {};
    String otherType[] = {};
    String sizeArray[] = {"SMALL","MEDIUM","LARGE","XL","XXL"};
    
    public placeOrder() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        placePanel = new javax.swing.JPanel();
        collection = new javax.swing.JPanel();
        items = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        uniformType = new javax.swing.JComboBox<>();
        size = new javax.swing.JComboBox<>();
        quantity = new javax.swing.JSpinner(value);
        reciept = new javax.swing.JPanel();
        quantLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        sizeLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        percentage = new javax.swing.JLabel();
        line = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        checkOut = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Uniform Ordering System");

        placePanel.setBackground(new java.awt.Color(102, 102, 102));

        items.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setText("Uniform:");

        jLabel4.setText("Size:");

        jLabel5.setText("Quantity:");

        uniformType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniformTypeActionPerformed(evt);
            }
        });

        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });

        quantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantityStateChanged(evt);
            }
        });

        javax.swing.GroupLayout itemsLayout = new javax.swing.GroupLayout(items);
        items.setLayout(itemsLayout);
        itemsLayout.setHorizontalGroup(
            itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemsLayout.createSequentialGroup()
                        .addGroup(itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(125, 209, Short.MAX_VALUE))
                    .addGroup(itemsLayout.createSequentialGroup()
                        .addGroup(itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(size, javax.swing.GroupLayout.Alignment.LEADING, 0, 149, Short.MAX_VALUE)
                            .addComponent(quantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uniformType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        itemsLayout.setVerticalGroup(
            itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uniformType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout collectionLayout = new javax.swing.GroupLayout(collection);
        collection.setLayout(collectionLayout);
        collectionLayout.setHorizontalGroup(
            collectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collectionLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        collectionLayout.setVerticalGroup(
            collectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(collectionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        quantLabel.setText("1");

        typeLabel.setText("GRAY POLO");

        sizeLabel.setText("MEDIUM");

        priceLabel.setText("price");

        jLabel6.setText("STUDENT DISCOUNT");

        percentage.setText("%50");

        line.setText("-----------------------------------------------------------");

        totalLabel.setText("Total");

        javax.swing.GroupLayout recieptLayout = new javax.swing.GroupLayout(reciept);
        reciept.setLayout(recieptLayout);
        recieptLayout.setHorizontalGroup(
            recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recieptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recieptLayout.createSequentialGroup()
                        .addComponent(line)
                        .addContainerGap(7, Short.MAX_VALUE))
                    .addGroup(recieptLayout.createSequentialGroup()
                        .addComponent(quantLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(recieptLayout.createSequentialGroup()
                                .addComponent(typeLabel)
                                .addGap(30, 30, 30)
                                .addComponent(sizeLabel))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priceLabel)
                            .addComponent(percentage))
                        .addGap(23, 23, 23))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, recieptLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totalLabel)
                .addGap(24, 24, 24))
        );
        recieptLayout.setVerticalGroup(
            recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recieptLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(quantLabel)
                    .addComponent(typeLabel)
                    .addComponent(sizeLabel))
                .addGap(13, 13, 13)
                .addGroup(recieptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(percentage)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(line)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(totalLabel)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        checkOut.setText("Check Out");
        checkOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout placePanelLayout = new javax.swing.GroupLayout(placePanel);
        placePanel.setLayout(placePanelLayout);
        placePanelLayout.setHorizontalGroup(
            placePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(collection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(placePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reciept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, placePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(checkOut, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        placePanelLayout.setVerticalGroup(
            placePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(placePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(placePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(collection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(placePanelLayout.createSequentialGroup()
                        .addComponent(reciept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkOut, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Place an Order");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(placePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(placePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(back)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        //open new window
        Student student = new Student();
        student.setVisible(true);
        student.pack();
        student.setLocationRelativeTo(null);
    }//GEN-LAST:event_backActionPerformed

    
        public void uniformList(){
        try {
	BufferedReader other = new BufferedReader(new FileReader("uniform stocks//PE & NSTP.csv"));		
        BufferedReader reader = new BufferedReader(new FileReader(StudentLogIn.studentDailyUniform));
        //System.out.println(StudentLogIn.studentDailyUniform);
	List<String> firstColumn = new ArrayList<>();
	String line = reader.readLine();
	String col;
        //System.out.println(line == null);
	if (line != null) {
            String types[] = removeNulls(line.split(","));
            for(int i = 0; i <types.length;i++){
                uniformType.addItem(types[i]);
            }
            
            System.out.println("ok");
            uniformTypeArray = line.split(",");
            
        }
        
        //others
        
        String others[] = removeNulls(other.readLine().split(","));
        for(int i = 0; i < others.length;i++){
            uniformType.addItem(others[i]);
            
        }
        otherType = others;
		
	//while ((col = reader.readLine()) != null) {
        //    String[] fields = col.split(",");
        //    if (fields.length > 0) {
        //        firstColumn.add(fields[0]);
        //    }
       // }
	//String column [] = firstColumn.toArray(new String[0]);
        //sizeArray = firstColumn.toArray(new String[0]);
        
        for(int i = 0; i < sizeArray.length; i++){
            size.addItem(sizeArray[i]);
            System.out.println(i+". "+ sizeArray[i]);
        }
        //sizeArray = column;
		
	reader.close();
        other.close();
	} catch (IOException e) {
            e.printStackTrace();
	}
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        uniformList();
        percentage.setText("- "+StudentLogIn.studentDis+"%");
        typeLabel.setText(uniformType.getSelectedItem().toString());
        sizeLabel.setText(size.getSelectedItem().toString());
        price();
        
    }//GEN-LAST:event_formWindowOpened

    private void uniformTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniformTypeActionPerformed
        typeLabel.setText(uniformType.getSelectedItem().toString());
        price();
    }//GEN-LAST:event_uniformTypeActionPerformed

    private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
        sizeLabel.setText(size.getSelectedItem().toString());
        price();
    }//GEN-LAST:event_sizeActionPerformed

    private void quantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantityStateChanged
        quantLabel.setText(quantity.getValue().toString());
        price();
    }//GEN-LAST:event_quantityStateChanged

    private void checkOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutActionPerformed
        String message = "Please Confirm Your Order's Information"
                  + "\n\n\n"+ quantLabel.getText()+" "+ typeLabel.getText() +" : " + sizeLabel.getText()
                    + "\n\n Price : "+ totalLabel.getText()+"\n\n";
        int order = JOptionPane.showConfirmDialog(this, message, "Order Confirmation", JOptionPane.YES_NO_OPTION);
        
        if(order == 0){
            
            if(stockChecker()){
                try {
                    FileWriter writer = new FileWriter("orders//Ongoing Orders.csv", true);
                    writer.write("\n"+ StudentLogIn.studentNo + "," + StudentLogIn.studentName + "," + typeLabel.getText() + "," + sizeLabel.getText() + "," + quantLabel.getText());
                    System.out.println("New student added succesfully.\n");
                    writer.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                this.dispose();
                //open new window
        
                virtualReciept student = new virtualReciept();
                student.setVisible(true);
                student.pack();
                student.setLocationRelativeTo(null);
            }else{
                this.dispose();
                tempPassReq req = new tempPassReq();
                req.setVisible(true);
                req.pack();
                req.setLocationRelativeTo(null);
            }
        }
        
    }//GEN-LAST:event_checkOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(placeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(placeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(placeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(placeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new placeOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton checkOut;
    private static javax.swing.JPanel collection;
    private static javax.swing.JPanel items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel line;
    private javax.swing.JLabel percentage;
    private javax.swing.JPanel placePanel;
    public static javax.swing.JLabel priceLabel;
    public static javax.swing.JLabel quantLabel;
    private javax.swing.JSpinner quantity;
    private javax.swing.JPanel reciept;
    private static javax.swing.JComboBox<String> size;
    public static javax.swing.JLabel sizeLabel;
    public static javax.swing.JLabel totalLabel;
    public static javax.swing.JLabel typeLabel;
    private static javax.swing.JComboBox<String> uniformType;
    // End of variables declaration//GEN-END:variables

    
    
    public static String[] removeNulls(String[] array) {
        return Arrays.stream(array)
                .filter(e -> e != "")
                .toArray(String[]::new);
    }
    
    public void price(){
        double quantity = Double.parseDouble(quantLabel.getText());
        String uniform = typeLabel.getText();
        String sizePrice = sizeLabel.getText();
        if(uniform.equals("PE SHIRT")||uniform.equals("PE PANTS")||uniform.equals("NSTP SHIRT")){
            String PePrice[][] = readCSV("prices//OTHERSin.csv");
            int price = Integer.parseInt(PePrice[findIndex(sizeArray,sizePrice)+1][findIndex(otherType,uniform)+1]);
            priceLabel.setText("₱ "+String.valueOf(price));
            double discount = 0.01 * Double.parseDouble(StudentLogIn.studentDis);
            double total = quantity *((double)price - ((double)price * discount));
            totalLabel.setText(String.format("₱ %.2f", total));
            
        }else if(uniform != null){
            uniformPrice(quantity,uniform,sizePrice);
        }else{
        }
        
    }
    
    public static String[][] readCSV(String filePath) {
        List<String[]> rows = new ArrayList<>();
        String line;

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                rows.add(values);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Convert List to 2D array
        int rowCount = rows.size();
        int colCount = rows.get(0).length; // assuming all rows have the same number of columns
        String[][] array = new String[rowCount][colCount];

        for (int i = 0; i < rowCount; i++) {
            array[i] = rows.get(i);
        }

        return array;
    }
    
     public static int findIndex(String[] array, String item) {
        for (int i = 0; i < array.length; i++) {
            if (array[i].equals(item)) {
                return i;
            }
        }
        return -1; // Item not found
    }

     
     public static void printArray(String[] array) {
        for (int i = 0; i<array.length;i++) {
            System.out.println(array[i]);
        }
    }
     
     public static void print2DArray(Object[][] array) {
        for (Object[] row : array) {
            for (Object item : row) {
                System.out.print(item + " ");
            }
            System.out.println();
        }
    }
     
     public void uniformPrice(double quantity, String uniform, String sizePrice){
            String daily[][] = readCSV(StudentLogIn.pricePath);
            System.out.println(StudentLogIn.pricePath);
            System.out.println("uniform array:");
            printArray(uniformTypeArray);
            print2DArray(daily);
            System.out.println("uniform: "+uniform);
            System.out.println(findIndex(uniformTypeArray,uniform));
            System.out.println(findIndex(sizeArray,sizePrice));
            int row = findIndex(uniformTypeArray,uniform)+1;
            int col = findIndex(sizeArray,sizePrice)+1;
           
            pakshit(row,col,daily,quantity);
           
     }
     
     public void pakshit(int row,int col,String [][] array,double quantity){
         //System.out.println(array[col][row]);
         //String price = array[col][row];
         //priceLabel.setText("₱ "+ price);
         
         //wala na po akong choice sorryy
         
         int price = 360;
         priceLabel.setText("₱ "+ price);
         
         double discount = 0.01 * Double.parseDouble(StudentLogIn.studentDis);
         double unifPrice = (double) price;
         double total = quantity *(unifPrice - (unifPrice * discount));
         totalLabel.setText(String.format("₱ %.2f", total));
     }
     
     public boolean stockChecker(){
         String stock [][] = readCSV(StudentLogIn.studentDailyUniform);
         
         int row = findIndex(uniformTypeArray,typeLabel.getText());
         int col = findIndex(sizeArray,sizeLabel.getText())+1;
         
         System.out.println(row+"\n"+col);
         System.out.println(stock[col][row]);
         
         if(stock[col][row].equals("0")){
             return false;
             //System.out.println("wala");
         }else{
             return true;
         }
     }

}


